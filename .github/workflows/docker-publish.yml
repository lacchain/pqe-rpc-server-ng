name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  IMAGE_NAME: pqe-rpc-server

jobs:
  push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Define Docker image version
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME:$VERSION

      - name: Build test image
        run: docker build . --file Dockerfile.test --build-arg VERSION=$VERSION --tag $IMAGE_NAME-test:$VERSION

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME:$VERSION $IMAGE_ID:$VERSION
          docker tag $IMAGE_NAME-test:$VERSION $IMAGE_ID-test:$VERSION

          docker push $IMAGE_ID:$VERSION
          docker push $IMAGE_ID-test:$VERSION
