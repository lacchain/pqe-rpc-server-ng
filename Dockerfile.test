ARG VERSION=latest
FROM pqe-rpc-server:${VERSION}

RUN apt-get update && apt-get install --no-install-recommends -yV \
    node-json5 \
    jq \
    wget \
    procps \
 && rm -rf /var/lib/apt/lists/*
RUN mkdir /ca-certs/
RUN mkdir /certs/

RUN wget https://github.com/msoap/shell2http/releases/download/1.13/shell2http_1.13_amd64.deb
RUN echo "4f41498fd58b9ddb856aef7ef59c267a3cf681a7d576eb9a73a376f5e88e92b2 shell2http_1.13_amd64.deb" | sha256sum --check --status
RUN dpkg -i shell2http_1.13_amd64.deb

RUN json5 -c appsettings.json
RUN mv appsettings.json.json tmp.json
RUN rm appsettings.json
RUN jq -r '.Config.OutputDebugKeys |= "false"' tmp.json > appsettings.json
RUN rm tmp.json

ENV ASPNETCORE_URLS=https://+:443
ENV ASPNETCORE_HTTPS_PORT=443â€©
ENV ASPNETCORE_Kestrel__Certificates__Default__Password="password"
ENV ASPNETCORE_Kestrel__Certificates__Default__Path="server.pfx"
ENV SERVICE_NAME=localhost

RUN echo '#!/bin/sh\n\
set -x\n\
shell2http /shutdown "kill \$(ps aux | grep '\''[d]otnet IBCQC_NetCore.dll'\'' | awk '\''{print \$2}'\'')" &>/dev/null\n\
openssl req -x509 -new -nodes -keyout /ca-certs/root.key -subj "/C=US/ST=CA/O=IADB/CN=godmode" -sha512 -days 1024 -out /ca-certs/root.crt\n\
cp /ca-certs/root.crt /usr/local/share/ca-certificates/root.crt\n\
update-ca-certificates -v\n\
\n\
printf "[dn]\nCN=$SERVICE_NAME\n[req]\ndistinguished_name = dn\n[EXT]\nsubjectAltName=DNS:$SERVICE_NAME\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth" > /server.config\n\
openssl genrsa -out /certs/server.key 2048\n\
openssl req -new -sha512 -key /certs/server.key -subj "/CN=$SERVICE_NAME" -extensions EXT -config /server.config -out /certs/server.csr\n\
openssl x509 -req -in /certs/server.csr -CA /ca-certs/root.crt -CAkey /ca-certs/root.key -CAcreateserial -out /certs/server.crt -days 500 -sha512\n\
\n\
openssl pkcs12 -export -in /certs/server.crt -inkey /certs/server.key -out /app/server.pfx -passout pass:password\n\
dotnet IBCQC_NetCore.dll\n'\
>> /run.sh
RUN chmod +x /run.sh

ENTRYPOINT []
CMD ["/run.sh"]
